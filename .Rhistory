sigma ~ dunif( 0 , 10 )
) , data = d, iter = 600, chains = 3)
plot(m5.1)
m5.1 <- map2stan(
alist(
Divorce ~ dnorm( mu , sigma ) ,
mu <- a + bA * MedianAgeMarriage_s ,
a ~ dnorm( 0 , 10 ) ,
bA ~ dnorm( 0 , 1 ) ,
sigma ~ dcauchy( 0 , 1 )
) , data = d, iter = 600, chains = 3)
precis(m5.1)
plot(m5.1)
plot(m5.1)
m5.1 <- map2stan(
alist(
Divorce ~ dnorm( mu , sigma ) ,
mu <- a + bA * MedianAgeMarriage_s ,
a ~ dnorm( 5 , 10 ) ,
bA ~ dnorm( 0 , 0.5 ) ,
sigma ~ dcauchy( 0 , 0.5 )
) , data = d, iter = 600, chains = 3)
plot(m5.1)
plot(m5.1)
x <- factor(x = c(0,1,1,1), levels = c(0,1), labels = c("m","f") )
str(x)
x
as.character(levels(x))[x]
as.numeric(x)
as.numeric(x)[x]
as.numeric(x)
as.numeric(levels(x))
as.numeric(x)
table(x)
f1 <- factor(letters)
levels(f1) <- rev(levels(f1))
f1
f1 <- factor(letters)
f1
pkgs <- c(
"broom", "dplyr", "ggplot2", "jsonlite", "Lahman", "purrr",
"rcorpora", "readr", "rmarkdown", "stringr", "tibble", "tidyr"
)
install.packages(pkgs)
library(ggplot2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = year))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = manufacturer, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = manufacturer, size = cly))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = manufacturer, size = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = cyl, alpha = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = year))
?geom_point
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke = year))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
?geom_smooth
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv)) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = drv)) +
geom_smooth(mapping = aes(color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv)) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = drv)) +
geom_smooth(mapping = aes(linetype = drv, color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(aes(color = class)) +
geom_smooth(data = subset(mpg, class == "subcompact"))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +
geom_point() +
geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, color = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, alpha = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill") +
ggtitle('Position = "fill"')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge") +
ggtitle('Position = "dodge"')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter") +
ggtitle('Position = "jitter"')
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = clarity))
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = clarity, color = cut))
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = clarity, color = clarity))
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = clarity, size = ..prop..,
group = clarity, color = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut)) + facet_wrap(~clarity)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity)) + facet_wrap(~cut)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ drv )
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ drv. )
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(drv ~ . )
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(drv )
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
install.packages(c("rmarkdown", "knitr", "DT"))
```{r}
summary(cars)
plot(cars)
head(cars)
corr(cars)
cor(cars)
cov(cars)
```{r}
library(nycflights13) # data
library(dplyr)        # cleaning functions
library(ggplot2)      # plotting functions
library(lubridate)
install.packages("lubridate")
library(ggplot2)
library(nycflights13) # data
library(dplyr)        # cleaning functions
library(ggplot2)      # plotting functions
library(lubridate)    # date-time processing
dow <- 'Saturday'
delays <-
flights %>%
mutate(date = ymd(paste(year, month, day)),
weekday = wday(date, label = TRUE, abbr = FALSE)) %>%
select(origin, date, weekday, dep_delay) %>%
filter(!is.na(dep_delay))
year <-
delays %>%
group_by(origin, date) %>%
summarise(mean_delay = mean(dep_delay))
weekday <-
delays %>%
filter(weekday == dow) %>%
group_by(origin) %>%
summarise(mean_delay = mean(dep_delay))
dow <- 'Saturday'
delays <-
flights %>%
mutate(date = ymd(paste(year, month, day)),
weekday = wday(date, label = TRUE, abbr = FALSE)) %>%
select(origin, date, weekday, dep_delay) %>%
filter(!is.na(dep_delay))
library(nycflights13)
install.packages("nycflights13")
library(nycflights13) # data
library(dplyr)        # cleaning functions
library(ggplot2)      # plotting functions
library(lubridate)    # date-time processing
dow <- 'Saturday'
delays <-
flights %>%
mutate(date = ymd(paste(year, month, day)),
weekday = wday(date, label = TRUE, abbr = FALSE)) %>%
select(origin, date, weekday, dep_delay) %>%
filter(!is.na(dep_delay))
year <-
delays %>%
group_by(origin, date) %>%
summarise(mean_delay = mean(dep_delay))
weekday <-
delays %>%
filter(weekday == dow) %>%
group_by(origin) %>%
summarise(mean_delay = mean(dep_delay))
```{r echo = FALSE}
ggplot(year, aes(x = date, y = mean_delay, color = origin)) +
geom_point(alpha = 0.2) +
geom_smooth(se = FALSE) +
ggtitle("Smoothed daily mean delays") +
ylab("Mean delay (m)") +
theme_bw()
```
ggplot(year, aes(x = date, y = mean_delay, color = origin)) +
geom_point(alpha = 0.2) +
geom_smooth(se = FALSE) +
ggtitle("Smoothed daily mean delays") +
ylab("Mean delay (m)") +
theme_bw()
ggplot(year, aes(x = date, y = mean_delay, color = origin)) +
geom_point(alpha = 0.2) +
geom_smooth(se = FALSE) +
ggtitle("Smoothed daily mean delays") +
ylab("Mean delay (m)") +
theme_bw()
knitr::kable(weekday)
knitr::kable(weekday, caption = "Mean Delays by Airport")
setwd(dir = "/Users/david_salazarv/Desktop/Tidyverse")
library(tidyr)
library(dplyr)
library(ggplot2)
library(readr)
library(tibble)
library(nycflights13)
flights %>%
select(tailnum, carrier) %>%
group_by(tailnum) %>%
summarise(count = n(),
n_carrier = length(unique(carrier))) %>%
arrange(desc(n_carrier))
flights %>%
select(tailnum, carrier) %>%
group_by(tailnum) %>%
summarise(count = n(),
n_carrier = n_distinct(carrier)) %>%
arrange(desc(n_carrier))
weather_day <- weather %>%
group_by(year, month, day, origin) %>%
summarise(avg_temp = mean(temp, na.rm = TRUE),
avg_humid = mean(humid, na.rm = TRUE),
avg_visib = mean(visib, na.rm = TRUE))
weather_day
weather_day <- weather %>%
group_by(year, month, day, origin) %>%
summarise_each(funs(mean), temp, humid, visib)
weather_day
setwd(dir = "/Users/david_salazarv/Desktop/Tidyverse")
suppressPackageStartupMessages(library(dplyr))
library(gapminder)
gtbl <- gapminder %>%
tbl_df
install.packages("gapminder")
suppressPackageStartupMessages(library(dplyr))
library(gapminder)
gtbl <- gapminder %>%
tbl_df
glimpse(gtbl)
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE))
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE)) %>%
tail(10)
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE)) %>%
filter(min_rank(worst_le_delta) < 2)
gtbl %>%
group_by(country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE)) %>%
filter(min_rank(worst_le_delta) < 2) %>%
arrange(worst_le_delta)
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE)) %>%
filter(min_rank(worst_le_delta) < 2) %>%
arrange(worst_le_delta)
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE))
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE)) %>%
ungroup()
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE)) %>%
ungroup() %>%
filter(min_rank(worst_le_delta) < 2) %>%
arrange(worst_le_delta)
gtbl %>%
group_by(continent, country) %>%
select(country, year, continent, lifeExp) %>%
mutate(le_delta = lifeExp - lag(lifeExp)) %>%
summarize(worst_le_delta = min(le_delta, na.rm = TRUE)) %>%
group_by(continent) %>%
filter(min_rank(worst_le_delta) < 2) %>%
arrange(worst_le_delta)
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
library(GGally)
library(ggthemes)
library(readr)
library(tidyr)
library(tibble)
library(directlabels)
library(viridis)
mpg %>%
ggplot(aes(displ, hwy, colour = class)) +
geom_point(show.legend = FALSE) +
geom_dl(aes(label = class), method = "smart.grid") +
theme_fivethirtyeight() +
ggtitle("Displ vs hwy, colored by class")
mpg %>%
ggplot(mapping = aes(x = displ, y = hwy, color = class)) +
geom_point(show.legend = FALSE) +
geom_smooth(method = lm, show.legend = FALSE) +
geom_dl(aes(label = class), method = "smart.grid") +
theme_fivethirtyeight()
library(lubridate)
depression_day = as.numeric(as.Date(ymd("2007-09-01")))
library(lubridate)
economics %>%
ggplot(mapping = aes(x = date, y = unemploy)) +
geom_line(color = "dodgerblue3") +
theme_fivethirtyeight() +
ggtitle("Unemployment in the US") +
annotate("text", x = ymd("2001-03-01"), y = 13500, label = "Recession", size = 5) +
geom_vline(xintercept = depression_day, linetype = 2, color = "firebrick2")
foot <- read_csv("/Users/david_salazarv/Desktop/R Folder/English Premier League/EP-1516.csv",
col_types = cols(Date = col_date(format = "%d/%m/%y")))
foot %>%
select(2:8) %>%
gather(key = 'h', value = "team", 2:3) %>%
filter(h == 'HomeTeam') %>%
group_by(team) %>%
mutate(goals = cumsum(FTHG)) %>%
arrange(desc(goals)) %>%
group_by(team) %>%
mutate(man_city = ifelse(team == "Man City","Manchester City","")) %>%
ggplot(mapping = aes(x = Date, y = goals)) +
geom_line(aes(group = team, alpha = factor(man_city)), colour = "dodgerblue3", show.legend = FALSE) +
geom_dl(aes(label = factor(man_city)), method = "smart.grid") +
theme_fivethirtyeight() +
scale_colour_fivethirtyeight() +
ggtitle("Cumulative Home Goals 15-16")
library(sp)
library(maptools)
library(haven)
ohsCol2 <- readShapeSpatial("/Users/david_salazarv/Desktop/R Folder/COL_adm/COL_adm1.shp")
ohsColI2 <- fortify(ohsCol2)
grupo2 <- data.frame(id = unique(ohsColI2[ , c("id")]))
(ohsColI2 <- as_tibble(ohsColI2))
ggplot(ohsColI2, aes(long, lat)) +
geom_polygon(aes(group = group), colour = "grey50", fill = NA) +
coord_quickmap() +
ggtitle("Colombia") +
theme_map()
depto <- read_dta("/Users/david_salazarv/Desktop/Stata Folder/trans.dta")
depto %>%
arrange(id)
as_tibble(ohsColI2)
total <- ohsColI2 %>%
mutate(id = as.integer(id)) %>%
left_join(depto, by = "id") %>%
as_tibble()
total
desarrollo <- read_dta("/Users/david_salazarv/Downloads/Desarrollo.dta")
d2 <- desarrollo %>%
group_by(departam) %>%
summarise(ing_per_capita = mean(ingresos_hogar_jefe)) %>%
arrange(departam)
d2
porfin <- total %>%
left_join(d2, by = c("cdigodane"="departam"))
porfin <- porfin %>%
arrange(ing_per_capita) %>%
mutate(id = as.character(id))
porfin
library(viridis)
porfin %>%
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = ing_per_capita)) +
coord_quickmap() +
ggtitle("Colombia") +
scale_fill_viridis()
y <- c(18, 11, 16)
df <- data.frame(x = 1:3, y = y, se = c(1.2, 0.5, 1.0))
ggplot(df, aes(factor(x), y, ymin = y - se, ymax = y + se)) +
geom_pointrange() +
coord_flip() +
theme_fivethirtyeight()
ggplot(df, aes(x, y, ymin = y - se, ymax = y + se)) +
geom_smooth(stat = "identity") +
theme_fivethirtyeight()
ggplot(midwest, aes(percwhite, percbelowpoverty)) +
geom_point(aes(size = poptotal / 1e6), alpha = 0.2, color = "firebrick1") +
scale_size_area("Population\n(millions)", breaks = c(0.5, 1, 2, 4)) +
coord_cartesian(xlim = c(50, 100), ylim = c(0,35)) +
theme_fivethirtyeight() +
ggtitle("% white vs % under poverty line")
library(gridExtra)
weighted <- ggplot(midwest, aes(percwhite, percbelowpoverty)) +
geom_point(aes(size = poptotal / 1e6), alpha = 0.2, color = "firebrick1") +
geom_smooth(aes(weight = poptotal), method = lm, size = 1) +
scale_size_area("Population\n(millions)", breaks = c(0.5, 1, 2, 4)) +
coord_cartesian(xlim = c(50, 100), ylim = c(0,35)) +
ggtitle("Weighted") +
theme_fivethirtyeight()
non_weighted <- ggplot(midwest, aes(percwhite, percbelowpoverty)) +
geom_point(aes(size = poptotal / 1e6), alpha = 0.2, color = "firebrick1") +
geom_smooth(method = lm, size = 1) +
scale_size_area("Population\n(millions)", breaks = c(0.5, 1, 2, 4)) +
coord_cartesian(xlim = c(50, 100), ylim = c(0,35)) +
theme_fivethirtyeight() +
ggtitle("Non Weighted")
grid.arrange(weighted, non_weighted, nrow = 1)
"from = http://stackoverflow.com/questions/36659813/how-do-i-add-an-axis-label-on-an-axis-tick-mark-using-ggplot2-in-r-similar-to-t"
theme_fivethirtyeight_mod <- function (base_size = 12, base_family = "sans") {
(theme_foundation(base_size = base_size, base_family = base_family) +
theme(line = element_line(colour = "black"), rect = element_rect(fill = ggthemes_data$fivethirtyeight["ltgray"], linetype = 0, colour = NA), text = element_text(colour = ggthemes_data$fivethirtyeight["dkgray"]),
axis.text = element_text(color = 'black'), axis.ticks = element_blank(), axis.line = element_blank(),
legend.title = element_blank(), legend.background = element_rect(fill="gray90", size=.5, linetype="dotted"),
legend.position = "bottom", legend.direction = "horizontal", legend.box = "vertical",
panel.grid = element_line(colour = NULL), panel.grid.major = element_line(colour = ggthemes_data$fivethirtyeight["medgray"]),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0, size = rel(1.5), face = "bold"),
plot.margin = unit(c(1, 1, 1, 1), "lines"), strip.background = element_rect()))
}
g1 <- ggplot(diamonds, aes(depth)) +
geom_histogram(binwidth = 0.1, alpha = 0.2) +
xlim(55, 70) +
theme_fivethirtyeight() +
ggtitle("Histogram Depth of diamonds")
g2 <- ggplot(diamonds, aes(depth)) +
geom_histogram(binwidth = 0.1, alpha = 0.2) +
xlim(55, 70) +
theme_fivethirtyeight_mod() +
ggtitle("Histogram Depth of diamonds")
grid.arrange(g1, g2)
ggplot(diamonds, aes(depth)) +
geom_freqpoly(aes(colour = cut), binwidth = 0.1, na.rm = TRUE) + xlim(58, 68) +
theme_fivethirtyeight()
ggplot(diamonds, aes(depth)) +
geom_histogram(aes(fill = cut), binwidth = 0.1, position = "fill",
na.rm = TRUE) +
xlim(58, 68)
ggplot(diamonds, aes(depth)) +
geom_density(na.rm = TRUE, fill = "mediumpurple") + xlim(58, 68) +
theme_fivethirtyeight() +
ggtitle("Density estimation")
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) + geom_density(alpha = 0.2, na.rm = TRUE) +
xlim(58, 68) + theme_fivethirtyeight()
df <- data.frame(x = rnorm(2000), y = rnorm(2000))
g1 <- df %>%
ggplot(mapping = aes(x = x, y = y)) +
geom_jitter()
g2 <- df %>%
ggplot(mapping = aes(x = x, y = y)) +
geom_jitter(alpha = 1/10) +
theme_fivethirtyeight()
grid.arrange(g1, g2, nrow = 1)
library(viridis)
df %>%
ggplot(mapping = aes(x = x, y = y)) +
geom_hex() +
scale_fill_viridis()
ggplot(diamonds, aes(color, price)) +
geom_bar(stat = "summary_bin", fun.y = mean) +
coord_flip() +
theme_fivethirtyeight() +
ggtitle("Average price per color")
